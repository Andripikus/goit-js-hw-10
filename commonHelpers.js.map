{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst datetimePicker = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('.js-start-btn');\nlet timer;\n\nstartBtn.disabled = true;\n\nfunction showError(message) {\n  iziToast.error({\n    title: 'Error',\n    message: message,\n    position: 'topCenter',\n    timeout: 5000,\n    transitionIn: 'fadeInDown',\n    transitionOut: 'fadeOutUp',\n  });\n}\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const userSelectedDate = selectedDates[0];\n    if (userSelectedDate <= new Date()) {\n      showError('Please choose a date in the future');\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nstartBtn.addEventListener('click', () => {\n  const endDate = new Date(datetimePicker.value);\n  startBtn.disabled = true;\n  datetimePicker.disabled = true;\n\n  timer = setInterval(() => {\n    const now = new Date();\n    const timeDifference = endDate - now;\n\n    if (timeDifference <= 0) {\n      clearInterval(timer);\n      updateTimerDisplay(0, 0, 0, 0);\n      datetimePicker.disabled = false;\n      return;\n    }\n\n    const time = convertMs(timeDifference);\n    updateTimerDisplay(time.days, time.hours, time.minutes, time.seconds);\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction updateTimerDisplay(days, hours, minutes, seconds) {\n  document.querySelector('.js-days').textContent = addLeadingZero(days);\n  document.querySelector('.js-hours').textContent = addLeadingZero(hours);\n  document.querySelector('.js-minutes').textContent = addLeadingZero(minutes);\n  document.querySelector('.js-seconds').textContent = addLeadingZero(seconds);\n}\n"],"names":["datetimePicker","startBtn","timer","showError","message","iziToast","options","selectedDates","flatpickr","endDate","timeDifference","updateTimerDisplay","time","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value"],"mappings":"sFAKA,MAAMA,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAW,SAAS,cAAc,eAAe,EACvD,IAAIC,EAEJD,EAAS,SAAW,GAEpB,SAASE,EAAUC,EAAS,CAC1BC,EAAS,MAAM,CACb,MAAO,QACP,QAASD,EACT,SAAU,YACV,QAAS,IACT,aAAc,aACd,cAAe,WACnB,CAAG,CACH,CAEA,MAAME,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACIA,EAAc,CAAC,GAChB,IAAI,MAC1BJ,EAAU,oCAAoC,EAC9CF,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAEvB,CACH,EAEAO,EAAU,mBAAoBF,CAAO,EAErCL,EAAS,iBAAiB,QAAS,IAAM,CACvC,MAAMQ,EAAU,IAAI,KAAKT,EAAe,KAAK,EAC7CC,EAAS,SAAW,GACpBD,EAAe,SAAW,GAE1BE,EAAQ,YAAY,IAAM,CAExB,MAAMQ,EAAiBD,EADX,IAAI,KAGhB,GAAIC,GAAkB,EAAG,CACvB,cAAcR,CAAK,EACnBS,EAAmB,EAAG,EAAG,EAAG,CAAC,EAC7BX,EAAe,SAAW,GAC1B,MACD,CAED,MAAMY,EAAOC,EAAUH,CAAc,EACrCC,EAAmBC,EAAK,KAAMA,EAAK,MAAOA,EAAK,QAASA,EAAK,OAAO,CACrE,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAAST,EAAmBI,EAAMC,EAAOC,EAASC,EAAS,CACzD,SAAS,cAAc,UAAU,EAAE,YAAcC,EAAeJ,CAAI,EACpE,SAAS,cAAc,WAAW,EAAE,YAAcI,EAAeH,CAAK,EACtE,SAAS,cAAc,aAAa,EAAE,YAAcG,EAAeF,CAAO,EAC1E,SAAS,cAAc,aAAa,EAAE,YAAcE,EAAeD,CAAO,CAC5E"}